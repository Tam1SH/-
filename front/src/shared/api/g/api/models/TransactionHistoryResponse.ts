/* tslint:disable */
/* eslint-disable */
/**
 * back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionHistoryResponse
 */
export interface TransactionHistoryResponse {
    /**
     * 
     * @type {number}
     * @memberof TransactionHistoryResponse
     */
    fromAccountId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionHistoryResponse
     */
    toAccountId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionHistoryResponse
     */
    senderUserId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionHistoryResponse
     */
    receiverUserId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionHistoryResponse
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionHistoryResponse
     */
    currency?: string;
    /**
     * 
     * @type {Date}
     * @memberof TransactionHistoryResponse
     */
    transactionDate?: Date;
}

/**
 * Check if a given object implements the TransactionHistoryResponse interface.
 */
export function instanceOfTransactionHistoryResponse(value: object): value is TransactionHistoryResponse {
    return true;
}

export function TransactionHistoryResponseFromJSON(json: any): TransactionHistoryResponse {
    return TransactionHistoryResponseFromJSONTyped(json, false);
}

export function TransactionHistoryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionHistoryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'fromAccountId': json['fromAccountId'] == null ? undefined : json['fromAccountId'],
        'toAccountId': json['toAccountId'] == null ? undefined : json['toAccountId'],
        'senderUserId': json['senderUserId'] == null ? undefined : json['senderUserId'],
        'receiverUserId': json['receiverUserId'] == null ? undefined : json['receiverUserId'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'transactionDate': json['transactionDate'] == null ? undefined : (new Date(json['transactionDate'])),
    };
}

export function TransactionHistoryResponseToJSON(value?: TransactionHistoryResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'fromAccountId': value['fromAccountId'],
        'toAccountId': value['toAccountId'],
        'senderUserId': value['senderUserId'],
        'receiverUserId': value['receiverUserId'],
        'amount': value['amount'],
        'currency': value['currency'],
        'transactionDate': value['transactionDate'] == null ? undefined : ((value['transactionDate']).toISOString()),
    };
}

